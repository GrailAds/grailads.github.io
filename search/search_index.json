{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome to GrailAds \u00b6 You are a - Publisher Advertiser","title":"Home"},{"location":"#welcome-to-grailads","text":"You are a - Publisher Advertiser","title":"Welcome to GrailAds"},{"location":"advertiser/adformats_adv/","text":"We at GrailAds are currently offering 3 Ad Formats (Banner, Interstitial, and Rewarded) best suited for your app. We support both landscape and portrait mode and are continuos innovating on new formats. Below are the looks of our ad format. Your feedback is important for us. Do tell us at info.grailads@gmail.com your views and suggestions Interstitial Portrait Landscape Rewarded Portrait Landscape","title":"Ad Formats"},{"location":"advertiser/advertiser/","text":"Welcome to GrailAds \u00b6 Getting Started with Ad Publication \u00b6 Go to GrailAds Business to register yourself as a advertiser. After registration and verification, go to Uploader section . Select the type of your ad you want to publish( Banner or Interstitial or Rewarded ). Upload Ad media files and other details relevant to your advertisement. Fill in parameters that define your target audience. Publish your Ad. Go to Payment section and pay the money to run your ad campaign. After our verification of your campaign, Your ad campaign will start for the duration of time you mentioned. Use your dashboard to view how your campaign is performing.","title":"How to publish Ad"},{"location":"advertiser/advertiser/#welcome-to-grailads","text":"","title":"Welcome to GrailAds"},{"location":"advertiser/advertiser/#getting-started-with-ad-publication","text":"Go to GrailAds Business to register yourself as a advertiser. After registration and verification, go to Uploader section . Select the type of your ad you want to publish( Banner or Interstitial or Rewarded ). Upload Ad media files and other details relevant to your advertisement. Fill in parameters that define your target audience. Publish your Ad. Go to Payment section and pay the money to run your ad campaign. After our verification of your campaign, Your ad campaign will start for the duration of time you mentioned. Use your dashboard to view how your campaign is performing.","title":"Getting Started with Ad Publication"},{"location":"advertiser/faq_advertiser/","text":"Q. What type of ad formats are available? A. Three ad formats namely Banner, Interstitial, Rewarded are available. These are available for both portrait and landscape mode apps. We are continuously working on making the best ad formats for you. Send in your suggestion to info.grailads@gmail.com Q. How can i track my campaign progress? A. You can track your ad campaign on your dashboard Q. Is targeting of my campaign to specific userbase possible? A. Yes. With GrailAds you can target your ad campaign to specific type of user you wish to show your ad to. All the available parameters that can be used to target ads to the user can be found here Q. How do i know if my campaign is not being scammed through use of bots or in other mischievous way? A. Every user using GrailAds is a verified user. With this it is automatically instilled that your ads have real eyeballs looking at them. On top of that we are building models to detect any irregular behavior. Q. Is GrailAds compliant with data privacy law? A. We don't take users any personal information out of his device. Hence we are compliant with every data privacy law of the world. GrailAds work on the vision of making user and his data privacy a priority for AdTech industry. We believe to solve and stop all data privacy related fraud, we need to stop collection of data outside users device only. We are building a suite of solution to leverage local data profiling starting from ads solution. Q. How is GrailAds claiming to ensure data privacy of user and still able to target ads so precisely? A. We don't take users any personal information out of his device. Hence we are compliant with every data privacy law of the world. We at GrailAds have build models that run locally on users device to filter out best ads for the users. Through our specialized models, we are leveraging benefit of total data privacy and personalization at the same time. Q. How are my ads not an incentivized ad if user is being rewarded? A. We don't reward user to interact with your ads. Interaction with ads are totally based on users interest. Users are getting rewarded passively while they are using apps and games that they already use based on their interests. This makes your ads as normal as it can and we can assure you all the leads you receive are based on their own will.","title":"FAQ(Advertiser)"},{"location":"advertiser/parameters/","text":"Following are different parameters and their meaning - Parameter Description Target State State you want to target your advertisement to Target City City you want to target your advertisement to Target Android brand Phone brand of user whom you want you want to target your advertisement to Target Phone price range Phone price range of user whom you want to target your advertisement to Target Network type Network type(Dta/WIFI) of device you want to target your advertisement to Target Native language Native language of user you want to target your advertisement to Target Phone language Phone language of user whom you want to target your advertisement to Target Favorite app category Favorite app categories of users to whom you want to target your advertisement to Apps used by target user Apps used by user whom you want to target your advertisement to Apps not used by target Apps not used by user whom you want to target your advertisement to Target Interest Interests of user whom you want to target your advertisement to Target Relationship status Relationship status of user whom you want to target your advertisement to Target Gender Gender of user you want to target your advertisement to Target Family size Size of family of user you want to target your advertisement to Target Age Age range of user you want to target your advertisement to Target Earning Annual earning range of user you want to target your advertisement to Target Work sector Sector of work of user you want to target your advertisement to","title":"Targeting Parameters"},{"location":"publisher/adformats_pub/","text":"We at GrailAds are currently offering 3 Ad Formats (Banner, Interstitial, and Rewarded) best suited for your app. We support both landscape and portrait mode and are continuos innovating on new formats. Below are the looks of our ad format. Your feedback is important for us. Do tell us at info.grailads@gmail.com your views and suggestions Interstitial Portrait Landscape Rewarded Portrait Landscape","title":"Ad Formats"},{"location":"publisher/banner/","text":"Banner Ad \u00b6 Initialize Banner Ad \u00b6 adSize = new AdSize(-1f , 200f ) ; position = AdPosition.Bottom; //Banner initializing grailAdsUnityBanner = new GrailAdsBanner(publisherAddress , publisherAppID , env, adSize , position); publisherAddress : user Publisher Login UserName publisherAppID : You can find it in the dashboard after registering the App in GrailAds dashboard env : \"LIVE\" or \"TEST\" adsize and adPosition as explained below. Load Ad \u00b6 grailAdsUnityBanner.LoadAd(); Configureable AdSize \u00b6 If width is set to -1 then width = screen_width adSize = new AdSize(width , height ) ; Configureable Ad Positions \u00b6 Currently two positions are available AdPosition.Bottom // & AdPosition.Top To Show The Banner Ad \u00b6 public void ShowBanner(){ grailAdsUnityBanner.Show(); } Destroy the banner Ad \u00b6 //Banner impression is counted when banner is displayed for //atleast 20 seconds and banner is destoryed. //Note, Destroying banner is important for successfull impression count to happen. //Always destroy previous banner before showing next one //To destroy Banner Ad public void Destroy_Banner(){ grailAdsUnityBanner.Destroy(); } Subscribe to events \u00b6 grailAdsUnityBanner.OnAdLoaded += HandleOnAdLoaded; grailAdsUnityBanner.OnAdClicked += HandleOnAdClicked; grailAdsUnityBanner.OnFailure += HandleOnFailure; grailAdsUnityBanner.OnAdClosed += HandleOnAdClosed; grailAdsUnityBanner.OnAdOpened += HandleOnAdOpened; grailAdsUnityBanner.OnPaidListener += HandleOnPaid; Handler for the subscribed events \u00b6 public void HandleOnAdLoaded(object sender, EventArgs args) { //This event is called when the Ad is loaded } public void HandleOnAdClicked(object sender, EventArgs args) { //This event is called when the Ad is clicked } public void HandleOnFailure(object sender, EventArgs args) { //This event is called when the Ad loading fails } public void HandleOnAdClosed(object sender, EventArgs args) { //This event is called when the Ad is closed after viewing } public void HandleOnAdOpened(object sender, EventArgs args) { //This event is called when the Ad is opened } public void HandleOnPaid(object sender, EventArgs args) { //This event is called when the payment for Ad impression is done successfully } Sample Code","title":"Banner"},{"location":"publisher/banner/#banner-ad","text":"","title":"Banner Ad"},{"location":"publisher/banner/#initialize-banner-ad","text":"adSize = new AdSize(-1f , 200f ) ; position = AdPosition.Bottom; //Banner initializing grailAdsUnityBanner = new GrailAdsBanner(publisherAddress , publisherAppID , env, adSize , position); publisherAddress : user Publisher Login UserName publisherAppID : You can find it in the dashboard after registering the App in GrailAds dashboard env : \"LIVE\" or \"TEST\" adsize and adPosition as explained below.","title":"Initialize Banner Ad"},{"location":"publisher/banner/#load-ad","text":"grailAdsUnityBanner.LoadAd();","title":"Load Ad"},{"location":"publisher/banner/#configureable-adsize","text":"If width is set to -1 then width = screen_width adSize = new AdSize(width , height ) ;","title":"Configureable AdSize"},{"location":"publisher/banner/#configureable-ad-positions","text":"Currently two positions are available AdPosition.Bottom // & AdPosition.Top","title":"Configureable Ad Positions"},{"location":"publisher/banner/#to-show-the-banner-ad","text":"public void ShowBanner(){ grailAdsUnityBanner.Show(); }","title":"To Show The Banner Ad"},{"location":"publisher/banner/#destroy-the-banner-ad","text":"//Banner impression is counted when banner is displayed for //atleast 20 seconds and banner is destoryed. //Note, Destroying banner is important for successfull impression count to happen. //Always destroy previous banner before showing next one //To destroy Banner Ad public void Destroy_Banner(){ grailAdsUnityBanner.Destroy(); }","title":"Destroy the banner Ad"},{"location":"publisher/banner/#subscribe-to-events","text":"grailAdsUnityBanner.OnAdLoaded += HandleOnAdLoaded; grailAdsUnityBanner.OnAdClicked += HandleOnAdClicked; grailAdsUnityBanner.OnFailure += HandleOnFailure; grailAdsUnityBanner.OnAdClosed += HandleOnAdClosed; grailAdsUnityBanner.OnAdOpened += HandleOnAdOpened; grailAdsUnityBanner.OnPaidListener += HandleOnPaid;","title":"Subscribe to events"},{"location":"publisher/banner/#handler-for-the-subscribed-events","text":"public void HandleOnAdLoaded(object sender, EventArgs args) { //This event is called when the Ad is loaded } public void HandleOnAdClicked(object sender, EventArgs args) { //This event is called when the Ad is clicked } public void HandleOnFailure(object sender, EventArgs args) { //This event is called when the Ad loading fails } public void HandleOnAdClosed(object sender, EventArgs args) { //This event is called when the Ad is closed after viewing } public void HandleOnAdOpened(object sender, EventArgs args) { //This event is called when the Ad is opened } public void HandleOnPaid(object sender, EventArgs args) { //This event is called when the payment for Ad impression is done successfully } Sample Code","title":"Handler for the subscribed events"},{"location":"publisher/faq/","text":"Q. How difficult is it to integrate GrailAds SDK/Plugin? GrailAds SDK and Plugin are build on line with common ad sdk and plugin available today in market. We are available for your support 24*7. Our experience says it will take 20 min to integrate our SDK and Plugin in your app. Steps for integration can be found in our Documentation . Q. What if user don't have GrailAds app installed? We recommend you use a secondary SDK partner to be called in case of GrailAds app is not installed on user device or Refer users to install GrailAds app if they want to earn money while using your app. In return for referring user, you will earn 15% of what user referred by you will earn for lifetime. We are compatible with every major Ad SDK (as secondary SDK for when GrailAds is not installed on user device) to be integrated along with our SDK. Q. Why should I [refer](/publisher/referral) users to install GrailAds app? A. GrailAds is an initiative to change how mobile advertisement work and we seek your support and guidance in it. Apart from this for every new user refereed by you, we are giving 15% of what he will earn for lifetime. Also the fact that user will earn money while using app like yours, It will make your app more valuable to your user. Q. How will GrailAds help me increasing value of my users? By using GrailAds, you will allow your users to earn money while using your app as usual. It will convert your app into a money making app for user. This will increase user stickiness to your app. Also, highly targeted ads for user will also entail higher CPM. Q. Is GrailAds compliant with data privacy laws? We don't take users any personal information out of his device. Hence we are compliant with every data privacy law of the world. GrailAds work on the vision of making user and his data privacy a priority for AdTech industry. We believe to solve and stop all data privacy related fraud, we need to stop collection of data outside users device only. We are building a suite of solution to leverage local data profiling starting from ads solution. Q. What about the ad revenue lost due to low network connectivity or offline app use? A. Our ads are available to user even if there is little or no internet connectivity at time. With this, apps can now leverage their offline games and apps to generate revenue thought to be lost until now. Q. What is the loading time for ad? A. Ads by us have the fastest loading time as we pre download most relevant ad for user on his device. Q. How do i monitor performance of app and statistics? A. You can monitor your app performance from your dashboard","title":"FAQ(Publisher)"},{"location":"publisher/interstitial/","text":"Interstitial Ad \u00b6 Initialize Banner Ad \u00b6 newUnityInterstitial = new GrailAdsInterstitial(publisherAddress , publisherAppID , env); publisherAddress : user Publisher Login UserName publisherAppID : You can find it in the dashboard after registering the App in GrailAds dashboard env : \"LIVE\" or \"TEST\" Load Ad \u00b6 newUnityInterstitial.LoadAd(); To Show The Interstitial Ad \u00b6 public void ShowInterstitial(){ newUnityInterstitial.Show(); } Subscribe to events \u00b6 newUnityInterstitial.OnAdLoaded += HandleOnAdLoaded; newUnityInterstitial.OnAdClicked += HandleOnAdClicked; newUnityInterstitial.OnFailure += HandleOnFailure; newUnityInterstitial.OnAdClosed += HandleOnAdClosed; newUnityInterstitial.OnAdOpened += HandleOnAdOpened; newUnityInterstitial.OnPaidListener += HandleOnPaid; Handler for the subscribed events \u00b6 public void HandleOnAdLoaded(object sender, EventArgs args) { //This event is called when the Ad is loaded } public void HandleOnAdClicked(object sender, EventArgs args) { //This event is called when the Ad is clicked } public void HandleOnFailure(object sender, EventArgs args) { //This event is called when the Ad loading fails } public void HandleOnAdClosed(object sender, EventArgs args) { //This event is called when the Ad is closed after viewing } public void HandleOnAdOpened(object sender, EventArgs args) { //This event is called when the Ad is opened } public void HandleOnPaid(object sender, EventArgs args) { //This event is called when the payment for Ad impression is done successfully } Sample Code","title":"Interstitial"},{"location":"publisher/interstitial/#interstitial-ad","text":"","title":"Interstitial Ad"},{"location":"publisher/interstitial/#initialize-banner-ad","text":"newUnityInterstitial = new GrailAdsInterstitial(publisherAddress , publisherAppID , env); publisherAddress : user Publisher Login UserName publisherAppID : You can find it in the dashboard after registering the App in GrailAds dashboard env : \"LIVE\" or \"TEST\"","title":"Initialize Banner Ad"},{"location":"publisher/interstitial/#load-ad","text":"newUnityInterstitial.LoadAd();","title":"Load Ad"},{"location":"publisher/interstitial/#to-show-the-interstitial-ad","text":"public void ShowInterstitial(){ newUnityInterstitial.Show(); }","title":"To Show The Interstitial Ad"},{"location":"publisher/interstitial/#subscribe-to-events","text":"newUnityInterstitial.OnAdLoaded += HandleOnAdLoaded; newUnityInterstitial.OnAdClicked += HandleOnAdClicked; newUnityInterstitial.OnFailure += HandleOnFailure; newUnityInterstitial.OnAdClosed += HandleOnAdClosed; newUnityInterstitial.OnAdOpened += HandleOnAdOpened; newUnityInterstitial.OnPaidListener += HandleOnPaid;","title":"Subscribe to events"},{"location":"publisher/interstitial/#handler-for-the-subscribed-events","text":"public void HandleOnAdLoaded(object sender, EventArgs args) { //This event is called when the Ad is loaded } public void HandleOnAdClicked(object sender, EventArgs args) { //This event is called when the Ad is clicked } public void HandleOnFailure(object sender, EventArgs args) { //This event is called when the Ad loading fails } public void HandleOnAdClosed(object sender, EventArgs args) { //This event is called when the Ad is closed after viewing } public void HandleOnAdOpened(object sender, EventArgs args) { //This event is called when the Ad is opened } public void HandleOnPaid(object sender, EventArgs args) { //This event is called when the payment for Ad impression is done successfully } Sample Code","title":"Handler for the subscribed events"},{"location":"publisher/publisher/","text":"Welcome to GrailAds \u00b6 Getting Started with Plugin Integration \u00b6 Go to GrailAds Business to register yourself as a publisher. After registration and verification, download the unity plugin package (GrailAdsUnityPlugin.unitypackage from here ). Import package into your unity project ( Assets -> Import Package -> Custom Package -> choose package to import ). To ensure proper jar files are populated ( Assets -> Play Service Resolver -> Android Resolver -> Resolve ). Include GrailAds plugin library in your project code ( using GrailAdsPlugin.Api ). Fill your unique App ID and Publisher ID at publisherAddress and publisherAppID (Find your unique App and Publisher ID's at your GrailAds dashboard after app approval). You can test your app with empty publisherAddress and publisherAppID too. You will need publisherAddress and publisherAppID for live production environment. Set env to 'TEST' for testing ads and 'LIVE' for live production of apps. You are all set to integrate GrailAds. Use the function code sample below to see how to load and show different types of Ads in your App - Banner Ads Interstitial Ads Rewarded Video Ads All three types of ads are delivered and displayed within 1 second of demand. Ads are available both when the device is online as well as offline. This ensures no revenue loss due to bad or non-availability of the network to the device. For each of the above ad types, multiple innovative view formats are available and are displayed depending on ad specifications.","title":"How to Integrate"},{"location":"publisher/publisher/#welcome-to-grailads","text":"","title":"Welcome to GrailAds"},{"location":"publisher/publisher/#getting-started-with-plugin-integration","text":"Go to GrailAds Business to register yourself as a publisher. After registration and verification, download the unity plugin package (GrailAdsUnityPlugin.unitypackage from here ). Import package into your unity project ( Assets -> Import Package -> Custom Package -> choose package to import ). To ensure proper jar files are populated ( Assets -> Play Service Resolver -> Android Resolver -> Resolve ). Include GrailAds plugin library in your project code ( using GrailAdsPlugin.Api ). Fill your unique App ID and Publisher ID at publisherAddress and publisherAppID (Find your unique App and Publisher ID's at your GrailAds dashboard after app approval). You can test your app with empty publisherAddress and publisherAppID too. You will need publisherAddress and publisherAppID for live production environment. Set env to 'TEST' for testing ads and 'LIVE' for live production of apps. You are all set to integrate GrailAds. Use the function code sample below to see how to load and show different types of Ads in your App - Banner Ads Interstitial Ads Rewarded Video Ads All three types of ads are delivered and displayed within 1 second of demand. Ads are available both when the device is online as well as offline. This ensures no revenue loss due to bad or non-availability of the network to the device. For each of the above ad types, multiple innovative view formats are available and are displayed depending on ad specifications.","title":"Getting Started with Plugin Integration"},{"location":"publisher/referral/","text":"Refer GrailAds \u00b6 Since, you won't be able to earn by watching the Ads provided by Grail APP if it is not installed in user's device. You can then refer GrailAds App to your users and in return get 15% of what the user earns for lifetiime. Check if GrailAds is installed \u00b6 To make the work easy we have prepared a utility function GrailAdsPlugin.Api.CheckIfGrailAdsInstalled() It returns `True` if GrailAds App is installed otherwise returns false Refer GrailAds App to your users \u00b6 We have prepared a banner image which will be shown in the bottom of the screen To show the referral Image you can use GrailAdsPlugin.Api.Initializer.ShowReferralImage(<publisher_id> , <destroy_time>); destroy_time : How long you want to show the banner to your users because after that it will be destroyed.","title":"Refer GrailAds App"},{"location":"publisher/referral/#refer-grailads","text":"Since, you won't be able to earn by watching the Ads provided by Grail APP if it is not installed in user's device. You can then refer GrailAds App to your users and in return get 15% of what the user earns for lifetiime.","title":"Refer GrailAds"},{"location":"publisher/referral/#check-if-grailads-is-installed","text":"To make the work easy we have prepared a utility function GrailAdsPlugin.Api.CheckIfGrailAdsInstalled() It returns `True` if GrailAds App is installed otherwise returns false","title":"Check if GrailAds is installed"},{"location":"publisher/referral/#refer-grailads-app-to-your-users","text":"We have prepared a banner image which will be shown in the bottom of the screen To show the referral Image you can use GrailAdsPlugin.Api.Initializer.ShowReferralImage(<publisher_id> , <destroy_time>); destroy_time : How long you want to show the banner to your users because after that it will be destroyed.","title":"Refer GrailAds App to your users"},{"location":"publisher/rewarded/","text":"Rewarded Ad \u00b6 Initialize Banner Ad \u00b6 newUnityRewarded = new GrailAdsRewarded(publisherAddress , publisherAppID , env); publisherAddress : user Publisher Login UserName publisherAppID : You can find it in the dashboard after registering the App in GrailAds dashboard env : \"LIVE\" or \"TEST\" Load Ad \u00b6 newUnityRewarded.LoadAd(); To Show The Rewarded Ad \u00b6 public void ShowRewarded(){ newUnityRewarded.Show(); } Subscribe to events \u00b6 newUnityRewarded.OnAdLoaded += HandleOnAdLoaded; newUnityRewarded.OnAdClicked += HandleOnAdClicked; newUnityRewarded.OnFailure += HandleOnFailure; newUnityRewarded.OnAdClosed += HandleOnAdClosed; newUnityRewarded.OnAdOpened += HandleOnAdOpened; newUnityRewarded.OnPaidListener += HandleOnPaid; newUnityRewarded.OnAdRewarded += HandleOnRewarded; Handler for the subscribed events \u00b6 public void HandleOnAdLoaded(object sender, EventArgs args) { //This event is called when the Ad is loaded } public void HandleOnAdClicked(object sender, EventArgs args) { //This event is called when the Ad is clicked } public void HandleOnFailure(object sender, EventArgs args) { //This event is called when the Ad loading fails } public void HandleOnAdClosed(object sender, EventArgs args) { //This event is called when the Ad is closed after viewing } public void HandleOnAdOpened(object sender, EventArgs args) { //This event is called when the Ad is opened } public void HandleOnPaid(object sender, EventArgs args) { //This event is called when the payment for Ad impression is done successfully } public void HandleOnRewarded(object sender, EventArgs args) { //This event is called when user is rewarded } Sample Code","title":"Rewarded"},{"location":"publisher/rewarded/#rewarded-ad","text":"","title":"Rewarded Ad"},{"location":"publisher/rewarded/#initialize-banner-ad","text":"newUnityRewarded = new GrailAdsRewarded(publisherAddress , publisherAppID , env); publisherAddress : user Publisher Login UserName publisherAppID : You can find it in the dashboard after registering the App in GrailAds dashboard env : \"LIVE\" or \"TEST\"","title":"Initialize Banner Ad"},{"location":"publisher/rewarded/#load-ad","text":"newUnityRewarded.LoadAd();","title":"Load Ad"},{"location":"publisher/rewarded/#to-show-the-rewarded-ad","text":"public void ShowRewarded(){ newUnityRewarded.Show(); }","title":"To Show The Rewarded Ad"},{"location":"publisher/rewarded/#subscribe-to-events","text":"newUnityRewarded.OnAdLoaded += HandleOnAdLoaded; newUnityRewarded.OnAdClicked += HandleOnAdClicked; newUnityRewarded.OnFailure += HandleOnFailure; newUnityRewarded.OnAdClosed += HandleOnAdClosed; newUnityRewarded.OnAdOpened += HandleOnAdOpened; newUnityRewarded.OnPaidListener += HandleOnPaid; newUnityRewarded.OnAdRewarded += HandleOnRewarded;","title":"Subscribe to events"},{"location":"publisher/rewarded/#handler-for-the-subscribed-events","text":"public void HandleOnAdLoaded(object sender, EventArgs args) { //This event is called when the Ad is loaded } public void HandleOnAdClicked(object sender, EventArgs args) { //This event is called when the Ad is clicked } public void HandleOnFailure(object sender, EventArgs args) { //This event is called when the Ad loading fails } public void HandleOnAdClosed(object sender, EventArgs args) { //This event is called when the Ad is closed after viewing } public void HandleOnAdOpened(object sender, EventArgs args) { //This event is called when the Ad is opened } public void HandleOnPaid(object sender, EventArgs args) { //This event is called when the payment for Ad impression is done successfully } public void HandleOnRewarded(object sender, EventArgs args) { //This event is called when user is rewarded } Sample Code","title":"Handler for the subscribed events"}]}